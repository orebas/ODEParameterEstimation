               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.11.0-beta2 (2024-05-29)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

[?2004h[0Kjulia> [7C[7C[0K[0Kjulia> [7C[7C[0K[0Kjulia> [7C[7C[0K[0Kjulia> [7C\[8C[0Kjulia> [7C\[8C[?25l[0Kjulia> [0m[0m[38;5;197m\[0m[7C[8C[?25h[?25l[0Kjulia> [0m[0m[38;5;197m\[0m[7C[8C[?25h[0K[0Kjulia> [7C[7C[0K[0Kjulia> [7C@time include("1000x.jl")[32C[0Kjulia> [7C@time include("1000x.jl")[32C[?25l[0Kjulia> [0m[0m[39m@[0m[39mtime[0m [0m[38;5;81minclude[0m[38;5;178m([0m[39m"[0m[38;5;185m1000x.jl[0m[39m"[0m[38;5;178m)[0m[7C[32C[?25h[0K[0Kjulia> [7C@time include("1000x.jl")[32C[?25l[0Kjulia> [0m[0m[39m@[0m[39mtime[0m [0m[38;5;81minclude[0m[38;5;178m([0m[39m"[0m[38;5;185m1000x.jl[0m[39m"[0m[38;5;178m)[0m[7C[32C[?25h
[?2004lFinally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[2, 6, 7]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
Solutions found: 1    Time: 0:00:01[K
  tracked loops (queued):            2 (0)[K
  solutions in current (last) loop:  0 (0)[K
  generated loops (no change):       2 (1)[K[A[A[A


[K[A[K[A[K[ASolutions found: 1    Time: 0:00:01[K
  tracked loops (queued):            5 (0)[K
  solutions in current (last) loop:  0 (0)[K
  generated loops (no change):       5 (5)[K
1-element Vector{Vector{ComplexF64}}:
 [0.010000000058730835 + 2.2160904732366223e-159im, 0.010000001233191258 + 4.65178951092237e-158im, 0.010000000062261979 + 2.211644955737652e-159im, 0.010000001278507038 + 5.014543738838335e-158im, 0.009999999982901166 + 1.2364095544010744e-161im]
1, 1, 1, 1, 1
the results are:
1-element Vector{Any}:
 ParameterEstimationResult(Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(K2 => 0.010000000058730835, pi => 0.010000001233191258, g1 => 0.010000000062261979, K1 => 0.010000001278507038, g2 => 0.009999999982901166), Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(S1(t) => 5.000000000000008, S2(t) => -3.961380181001726e-13, S0(t) => 3.870310721966953e-13), 0.0, 0.8519898556350393, nothing, 8, 0.0)
Relative mean square error for parameters: 7.953564180791169e-6%
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[2, 3, 6]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
1-element Vector{Vector{ComplexF64}}:
 [0.00999999999149609 - 7.081694524274596e-152im, 0.009999999821447073 - 1.4874914754305692e-150im, 0.009999999991321494 - 7.029486139156195e-152im, 0.009999999757433027 - 2.0340386842129204e-150im, 0.26000000000006795 - 2.0437601652097442e-153im]
1, 1, 1, 1, 2
the results are:
1-element Vector{Any}:
 ParameterEstimationResult(Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(K2 => 0.00999999999149609, pi => 0.009999999821447073, g1 => 0.009999999991321494, K1 => 0.009999999757433027, g2 => 0.26000000000006795), Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(S1(t) => 4.999999999999999, S2(t) => 2.8351139726185056e-15, S0(t) => -4.899372716495621e-16), 0.0, 0.842848803410361, nothing, 8, 0.0)
Relative mean square error for parameters: 1.3480913732205494e-6%
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[2, 3, 5]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
1-element Vector{Vector{ComplexF64}}:
 [0.01000000000573147 + 4.192304591042173e-164im, 0.010000000120378777 + 8.803394485723064e-163im, 0.010000000006141799 + 4.154996323457432e-164im, 0.010000000241908965 + 1.7846918548264279e-162im, 0.5099999999994604 + 7.528559323518844e-166im]
1, 1, 1, 1, 3
the results are:
1-element Vector{Any}:
 ParameterEstimationResult(Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(K2 => 0.01000000000573147, pi => 0.010000000120378777, g1 => 0.010000000006141799, K1 => 0.010000000241908965, g2 => 0.5099999999994604), Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(S1(t) => 5.0, S2(t) => -1.0047993568787881e-14, S0(t) => 1.3090008499400042e-14), 0.0, 0.8531867175619356, nothing, 8, 0.0)
Relative mean square error for parameters: 1.2089794765509704e-6%
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[4, 6, 7]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
1-element Vector{Vector{ComplexF64}}:
 [0.009999999984934786 + 1.7568409954094756e-181im, 0.009999999683865498 + 3.680776043965733e-180im, 0.009999999984588353 + 1.7568409954094756e-181im, 0.009999998676259917 + 1.5901705609889812e-179im, 0.7600000000004055 + 5.973685944915215e-183im]
1, 1, 1, 1, 4
the results are:
1-element Vector{Any}:
 ParameterEstimationResult(Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(K2 => 0.009999999984934786, pi => 0.009999999683865498, g1 => 0.009999999984588353, K1 => 0.009999998676259917, g2 => 0.7600000000004055), Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(S1(t) => 4.999999999999946, S2(t) => 5.695671583330088e-14, S0(t) => -1.0392833273790343e-15), 0.0, 0.8700941396694558, nothing, 8, 0.0)
Relative mean square error for parameters: 6.0871886943034536e-6%
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[4, 6, 7]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
1-element Vector{Vector{ComplexF64}}:
 [0.009999911121274255 - 1.5525790509896428e-167im, 0.00999813507761453 - 3.257849076380614e-166im, 0.00999990599491578 - 1.5550631774712263e-167im, 0.2599958155239051 - 7.366263060055393e-166im, 0.010000024972128138 + 1.3182366504808936e-169im]
1, 1, 1, 2, 1
the results are:
1-element Vector{Any}:
 ParameterEstimationResult(Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(K2 => 0.009999911121274255, pi => 0.00999813507761453, g1 => 0.00999990599491578, K1 => 0.2599958155239051, g2 => 0.010000024972128138), Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(S1(t) => 4.999999999505386, S2(t) => 3.113753600866612e-9, S0(t) => -2.6191390259575218e-9), 0.0, 0.8541270389113217, nothing, 8, 0.0)
Relative mean square error for parameters: 0.008391898027526467%
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[3, 5, 7]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
1-element Vector{Vector{ComplexF64}}:
 [0.009999839888732981 + 1.4339461244678132e-156im, 0.009996638759794913 + 3.0044585465039895e-155im, 0.009999840759214442 + 1.4384983343867586e-156im, 0.2599913869675754 + 7.87350227580803e-155im, 0.2599999976888454 - 3.75512863138009e-158im]
1, 1, 1, 2, 2
the results are:
1-element Vector{Any}:
 ParameterEstimationResult(Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(K2 => 0.009999839888732981, pi => 0.009996638759794913, g1 => 0.009999840759214442, K1 => 0.2599913869675754, g2 => 0.2599999976888454), Dict{SymbolicUtils.BasicSymbolic{Real}, Float64}(S1(t) => 4.999999999809532, S2(t) => -1.9901027676536417e-11, S0(t) => 2.1037089485839953e-10), 0.0, 0.8447264799969724, nothing, 8, 0.0)
Relative mean square error for parameters: 0.015138473568570007%
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
Finally, the following substitutions will be made:Dict{Any, Any}()
We are trying these points:[2, 3, 5]
Using these observations and their derivatives:
Dict{Int64, Int64} with 3 entries:
  2 => 0
  3 => 1
  1 => 1
