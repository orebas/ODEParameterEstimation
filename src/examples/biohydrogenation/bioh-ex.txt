Precompiling ODEParameterEstimation...
  88847.1 ms  ✓ ODEParameterEstimation
Info Given ODEParameterEstimation was explicitly requested, output will be shown live [0K
[0K  1 dependency successfully precompiled in 98 seconds. 672 already precompiled.

========================================
RUNNING WITH OLD ParameterEstimation.jl
========================================


[DEBUG-PE:estimate.jl:38] ========== Starting ParameterEstimation.estimate ==========
[DEBUG-PE] Model type: System
[DEBUG-PE] at_time: -0.002
[DEBUG-PE] report_time: -1.0
[DEBUG-PE] Data keys: Any[x5(t), "t", x4(t)]
[DEBUG-PE] Time range: [-1.0, 1.0]
[DEBUG-PE] Parameter constraints: Dict{Num, Tuple{Float64, Float64}}(k9 => (0.0, 1.0), k7 => (0.0, 1.0), k10 => (0.0, 1.0), k6 => (0.0, 1.0), k5 => (0.0, 1.0), k8 => (0.0, 1.0))
[DEBUG-PE] IC constraints: Dict{Num, Tuple{Float64, Float64}}(x5(t) => (0.0, 1.0), x7(t) => (0.0, 1.0), x4(t) => (0.0, 1.0), x6(t) => (0.0, 1.0))
[DEBUG-PE] Threaded: true
[DEBUG-PE] Using threaded estimation
┌ Warning: Using threaded estimation.
└ @ ParameterEstimation ~/.julia/dev/ParameterEstimation/src/estimation/threaded.jl:7
[ Info: Preproccessing `ModelingToolkit.ODESystem` object
[ Info: Solving the problem
[ Info: Constructing the maximal system
[ Info: Truncating
[ Info: Assessing local identifiability
[ Info: Found Pivots: [x7_0]
[ Info: Locally identifiable parameters: [k5, k6, k7, k8, k9, k10, x6, x5, x4]
[ Info: Not identifiable parameters:     [x7]
[ Info: Randomizing
[ Info: Gröbner basis computation
[ Info: Remainder computation
[ Info: === Summary ===
[ Info: Globally identifiable parameters:                 [k6, k7, x5, k5, x4]
[ Info: Locally but not globally identifiable parameters: [k8, x6, k9, k10]
[ Info: Not identifiable parameters:                      [x7]
[ Info: ===============
[ Info: Estimating (threaded) via the interpolators: ["AAA"]
[DEBUG-PE:fixed_degree.jl:103] Interpolating with AAA at_time=-0.002
Interpolating x5(t)
Interpolating via AAA
  1.018255 seconds (470.43 k allocations: 26.691 MiB, 98.62% compilation time: 61% of which was recompilation)
Interpolation via AAA complete
Interpolation complete
Evaluating derivatives assuming homotopy method
[DEBUG-PE:utils.jl] Processing derivatives for y2
[DEBUG-PE:utils.jl] Found 12 derivatives matching y2
[DEBUG-PE:utils.jl]   y2_0 => order 0
[DEBUG-PE:utils.jl]   y2_1 => order 1
[DEBUG-PE:utils.jl]   y2_2 => order 2
[DEBUG-PE:utils.jl]   y2_3 => order 3
[DEBUG-PE:utils.jl]   y2_4 => order 4
[DEBUG-PE:utils.jl]   y2_5 => order 5
[DEBUG-PE:utils.jl]   y2_6 => order 6
[DEBUG-PE:utils.jl]   y2_7 => order 7
[DEBUG-PE:utils.jl]   y2_8 => order 8
[DEBUG-PE:utils.jl]   y2_9 => order 9
[DEBUG-PE:utils.jl]   y2_10 => order 10
[DEBUG-PE:utils.jl]   y2_11 => order 11
Evaluating derivative of y2_3 (order 3)
  0.050566 seconds (5.49 k allocations: 262.414 KiB, 99.31% compilation time)
  0.610918 seconds (447.88 k allocations: 21.846 MiB, 96.30% compilation time)
Evaluating derivative of y2_7 (order 7)
  2.281525 seconds (2.01 M allocations: 98.998 MiB, 99.99% compilation time)
  0.002588 seconds (1.55 k allocations: 34.445 KiB)
Evaluating derivative of y2_11 (order 11)
  0.356955 seconds (789.80 k allocations: 35.821 MiB, 99.95% compilation time)
  0.001927 seconds (1.54 k allocations: 33.789 KiB)
Evaluating derivative of y2_9 (order 9)
  0.284606 seconds (626.23 k allocations: 28.977 MiB, 99.94% compilation time)
  0.002152 seconds (1.54 k allocations: 33.789 KiB)
Evaluating derivative of y2_8 (order 8)
  0.250839 seconds (557.56 k allocations: 25.985 MiB, 99.91% compilation time)
  0.002585 seconds (1.54 k allocations: 33.789 KiB)
Evaluating derivative of y2_1 (order 1)
  0.000127 seconds (99 allocations: 5.109 KiB)
  0.001566 seconds (1.54 k allocations: 33.766 KiB)
Evaluating derivative of y2_4 (order 4)
  0.166337 seconds (343.99 k allocations: 16.661 MiB, 99.90% compilation time)
  0.001605 seconds (1.54 k allocations: 33.742 KiB)
Evaluating derivative of y2_10 (order 10)
  0.599001 seconds (696.05 k allocations: 31.844 MiB, 42.49% gc time, 99.97% compilation time)
  0.002094 seconds (1.54 k allocations: 33.742 KiB)
Evaluating derivative of y2_6 (order 6)
  0.201437 seconds (439.77 k allocations: 21.048 MiB, 99.90% compilation time)
  0.003400 seconds (1.54 k allocations: 33.742 KiB)
Evaluating derivative of y2_5 (order 5)
  0.186825 seconds (388.50 k allocations: 18.793 MiB, 99.90% compilation time)
  0.005871 seconds (1.53 k allocations: 33.719 KiB)
Evaluating derivative of y2_2 (order 2)
  0.000157 seconds (99 allocations: 5.109 KiB)
  0.002613 seconds (1.53 k allocations: 33.695 KiB)
Evaluating derivative of y2_0 (order 0)
  0.000092 seconds (85 allocations: 4.500 KiB)
  0.002005 seconds (1.53 k allocations: 33.672 KiB)
Interpolating x4(t)
Interpolating via AAA
  0.001584 seconds (3.59 k allocations: 2.464 MiB)
Interpolation via AAA complete
Interpolation complete
Evaluating derivatives assuming homotopy method
[DEBUG-PE:utils.jl] Processing derivatives for y1
[DEBUG-PE:utils.jl] Found 12 derivatives matching y1
[DEBUG-PE:utils.jl]   y1_0 => order 0
[DEBUG-PE:utils.jl]   y1_1 => order 1
[DEBUG-PE:utils.jl]   y1_2 => order 2
[DEBUG-PE:utils.jl]   y1_3 => order 3
[DEBUG-PE:utils.jl]   y1_4 => order 4
[DEBUG-PE:utils.jl]   y1_5 => order 5
[DEBUG-PE:utils.jl]   y1_6 => order 6
[DEBUG-PE:utils.jl]   y1_7 => order 7
[DEBUG-PE:utils.jl]   y1_8 => order 8
[DEBUG-PE:utils.jl]   y1_9 => order 9
[DEBUG-PE:utils.jl]   y1_10 => order 10
[DEBUG-PE:utils.jl]   y1_11 => order 11
Evaluating derivative of y1_9 (order 9)
  0.000107 seconds (88 allocations: 4.656 KiB)
  0.002027 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_3 (order 3)
  0.000093 seconds (88 allocations: 4.609 KiB)
  0.001860 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_8 (order 8)
  0.000117 seconds (88 allocations: 4.641 KiB)
  0.001491 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_5 (order 5)
  0.000054 seconds (88 allocations: 4.625 KiB)
  0.001505 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_6 (order 6)
  0.000054 seconds (88 allocations: 4.625 KiB)
  0.001386 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_7 (order 7)
  0.000045 seconds (88 allocations: 4.641 KiB)
  0.001448 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_10 (order 10)
  0.000049 seconds (88 allocations: 4.656 KiB)
  0.001781 seconds (1.53 k allocations: 33.672 KiB)
Evaluating derivative of y1_2 (order 2)
  0.000103 seconds (88 allocations: 4.594 KiB)
  0.001644 seconds (1.53 k allocations: 33.648 KiB)
Evaluating derivative of y1_0 (order 0)
  0.000080 seconds (85 allocations: 4.500 KiB)
  0.001477 seconds (1.53 k allocations: 33.625 KiB)
Evaluating derivative of y1_4 (order 4)
  0.000052 seconds (88 allocations: 4.609 KiB)
  0.001471 seconds (1.53 k allocations: 33.625 KiB)
Evaluating derivative of y1_11 (order 11)
  0.000082 seconds (88 allocations: 4.672 KiB)
  0.001850 seconds (1.53 k allocations: 33.625 KiB)
Evaluating derivative of y1_1 (order 1)
  0.000097 seconds (88 allocations: 4.594 KiB)
  0.001621 seconds (1.53 k allocations: 33.602 KiB)
[ Info: Solving polynomial system via homotopy method
[DEBUG-PE:fixed_degree.jl:119] Solving via homotopy at_time=-0.002

================================================================================
[DEBUG-PE] POLYNOMIAL SYSTEM TO SOLVE:
================================================================================
[DEBUG-PE] Number of equations: 25
[DEBUG-PE] Number of variables: 25
[DEBUG-PE] Variables:
  k10_0
  k5_0
  k6_0
  k7_0
  k8_0
  k9_0
  x4_0
  x4_1
  x4_2
  x4_3
  x4_4
  x4_5
  x5_0
  x5_1
  x5_2
  x5_3
  x5_4
  x5_5
  x5_6
  x6_0
  x6_1
  x6_2
  x6_3
  x6_4
  x6_5

[DEBUG-PE] Equations:
  Equation 1: 0.805715447664474 - x5_0
  Equation 2: -k5_0*x4_0*x5_0 - k5_0*x4_0*x6_0 + k6_0*x5_0*x5_1 + k6_0*x6_0*x5_1 + k7_0*k6_0*x5_0 + k7_0*x4_0*x5_0 - k8_0*k5_0*x4_0 + k8_0*k6_0*x5_1 + k8_0*x4_0*x5_1 + x4_0*x5_0*x5_1 + x4_0*x6_0*x5_1
  Equation 3: 0.265825030292893 - x4_0
  Equation 4: k5_0*x4_0 + k6_0*x4_1 + x4_1*x4_0
  Equation 5: -0.0128279349644504 - x5_1
  Equation 6: k6_0*x5_1^2 + x4_0*x5_1^2 - k5_0*x4_0*x5_1 - k5_0*x4_0*x6_1 - k5_0*x4_1*x5_0 - k5_0*x4_1*x6_0 + k6_0*x5_0*x5_2 + k6_0*x6_0*x5_2 + k6_0*x6_1*x5_1 + k7_0*k6_0*x5_1 + k7_0*x4_0*x5_1 + k7_0*x4_1*x5_0 - k8_0*k5_0*x4_1 + k8_0*k6_0*x5_2 + k8_0*x4_0*x5_2 + k8_0*x4_1*x5_1 + x4_0*x5_0*x5_2 + x4_0*x6_0*x5_2 + x4_0*x6_1*x5_1 + x4_1*x5_0*x5_1 + x4_1*x6_0*x5_1
  Equation 7: -k9_0*x6_0^3 - k7_0*x5_0*k10_0 + k8_0*x6_1*k10_0 - k9_0*k8_0*x6_0^2 + k9_0*x6_0^2*k10_0 - k9_0*x6_0^2*x5_0 + x6_0*x6_1*k10_0 + x6_1*x5_0*k10_0 + k9_0*k8_0*x6_0*k10_0 + k9_0*x6_0*x5_0*k10_0
  Equation 8: -0.152778702529546 - x4_1
  Equation 9: k5_0*x4_1 + k6_0*x4_2 + x4_2*x4_0 + x4_1^2
  Equation 10: 0.00276825682422927 - x5_2
  Equation 11: 2*x4_1*x5_1^2 - k5_0*x4_0*x5_2 - k5_0*x4_0*x6_2 - 2*k5_0*x4_1*x5_1 - 2*k5_0*x4_1*x6_1 - k5_0*x4_2*x5_0 - k5_0*x4_2*x6_0 + k6_0*x5_0*x5_3 + 3*k6_0*x5_2*x5_1 + k6_0*x6_0*x5_3 + 2*k6_0*x6_1*x5_2 + k6_0*x6_2*x5_1 + k7_0*k6_0*x5_2 + k7_0*x4_0*x5_2 + 2*k7_0*x4_1*x5_1 + k7_0*x4_2*x5_0 - k8_0*k5_0*x4_2 + k8_0*k6_0*x5_3 + k8_0*x4_0*x5_3 + 2*k8_0*x4_1*x5_2 + k8_0*x4_2*x5_1 + x4_0*x5_0*x5_3 + 3*x4_0*x5_2*x5_1 + x4_0*x6_0*x5_3 + 2*x4_0*x6_1*x5_2 + x4_0*x6_2*x5_1 + 2*x4_1*x5_0*x5_2 + 2*x4_1*x6_0*x5_2 + 2*x4_1*x6_1*x5_1 + x4_2*x5_0*x5_1 + x4_2*x6_0*x5_1
  Equation 12: x6_1^2*k10_0 - k7_0*x5_1*k10_0 + k8_0*x6_2*k10_0 - k9_0*x6_0^2*x5_1 - 3*k9_0*x6_0^2*x6_1 + x6_0*x6_2*k10_0 + x6_1*x5_1*k10_0 + x6_2*x5_0*k10_0 - 2*k9_0*k8_0*x6_0*x6_1 + k9_0*k8_0*x6_1*k10_0 + k9_0*x6_0*x5_1*k10_0 + 2*k9_0*x6_0*x6_1*k10_0 - 2*k9_0*x6_0*x6_1*x5_0 + k9_0*x6_1*x5_0*k10_0
  Equation 13: 0.0629183342429563 - x4_2
  Equation 14: k5_0*x4_2 + k6_0*x4_3 + x4_0*x4_3 + 3*x4_1*x4_2
  Equation 15: 0.0583996636349706 - x5_3
  Equation 16: 3*k6_0*x5_2^2 + 3*x4_0*x5_2^2 + 3*x4_2*x5_1^2 - k5_0*x4_0*x5_3 - k5_0*x4_0*x6_3 - 3*k5_0*x4_1*x5_2 - 3*k5_0*x4_1*x6_2 - 3*k5_0*x4_2*x5_1 - 3*k5_0*x4_2*x6_1 - k5_0*x4_3*x5_0 - k5_0*x4_3*x6_0 + k6_0*x5_0*x5_4 + 4*k6_0*x5_1*x5_3 + k6_0*x6_0*x5_4 + 3*k6_0*x6_1*x5_3 + 3*k6_0*x6_2*x5_2 + k6_0*x6_3*x5_1 + k7_0*k6_0*x5_3 + k7_0*x4_0*x5_3 + 3*k7_0*x4_1*x5_2 + 3*k7_0*x4_2*x5_1 + k7_0*x4_3*x5_0 - k8_0*k5_0*x4_3 + k8_0*k6_0*x5_4 + k8_0*x4_0*x5_4 + 3*k8_0*x4_1*x5_3 + 3*k8_0*x4_2*x5_2 + k8_0*x4_3*x5_1 + x4_0*x5_0*x5_4 + 4*x4_0*x5_1*x5_3 + x4_0*x6_0*x5_4 + 3*x4_0*x6_1*x5_3 + 3*x4_0*x6_2*x5_2 + x4_0*x6_3*x5_1 + 3*x4_1*x5_0*x5_3 + 9*x4_1*x5_2*x5_1 + 3*x4_1*x6_0*x5_3 + 6*x4_1*x6_1*x5_2 + 3*x4_1*x6_2*x5_1 + 3*x4_2*x5_0*x5_2 + 3*x4_2*x6_0*x5_2 + 3*x4_2*x6_1*x5_1 + x4_3*x5_0*x5_1 + x4_3*x6_0*x5_1
  Equation 17: -k7_0*x5_2*k10_0 + k8_0*x6_3*k10_0 - 2*k9_0*k8_0*x6_1^2 - 6*k9_0*x6_0*x6_1^2 - k9_0*x6_0^2*x5_2 - 3*k9_0*x6_0^2*x6_2 + 2*k9_0*x6_1^2*k10_0 - 2*k9_0*x6_1^2*x5_0 + x6_0*x6_3*k10_0 + x6_1*x5_2*k10_0 + 3*x6_1*x6_2*k10_0 + 2*x6_2*x5_1*k10_0 + x6_3*x5_0*k10_0 - 2*k9_0*k8_0*x6_0*x6_2 + k9_0*k8_0*x6_2*k10_0 + k9_0*x6_0*x5_2*k10_0 - 4*k9_0*x6_0*x6_1*x5_1 + 2*k9_0*x6_0*x6_2*k10_0 - 2*k9_0*x6_0*x6_2*x5_0 + 2*k9_0*x6_1*x5_1*k10_0 + k9_0*x6_2*x5_0*k10_0
  Equation 18: 0.0905083629127447 - x5_4
  Equation 19: 12*x4_1*x5_2^2 + 4*x4_3*x5_1^2 - k5_0*x4_0*x5_4 - k5_0*x4_0*x6_4 - 4*k5_0*x4_1*x5_3 - 4*k5_0*x4_1*x6_3 - 6*k5_0*x4_2*x5_2 - 6*k5_0*x4_2*x6_2 - 4*k5_0*x4_3*x5_1 - 4*k5_0*x4_3*x6_1 - k5_0*x4_4*x5_0 - k5_0*x4_4*x6_0 + k6_0*x5_0*x5_5 + 5*k6_0*x5_1*x5_4 + 10*k6_0*x5_2*x5_3 + k6_0*x6_0*x5_5 + 4*k6_0*x6_1*x5_4 + 6*k6_0*x6_2*x5_3 + 4*k6_0*x6_3*x5_2 + k6_0*x6_4*x5_1 + k7_0*k6_0*x5_4 + k7_0*x4_0*x5_4 + 4*k7_0*x4_1*x5_3 + 6*k7_0*x4_2*x5_2 + 4*k7_0*x4_3*x5_1 + k7_0*x4_4*x5_0 - k8_0*k5_0*x4_4 + k8_0*k6_0*x5_5 + k8_0*x4_0*x5_5 + 4*k8_0*x4_1*x5_4 + 6*k8_0*x4_2*x5_3 + 4*k8_0*x4_3*x5_2 + k8_0*x4_4*x5_1 + x4_0*x5_0*x5_5 + 5*x4_0*x5_1*x5_4 + 10*x4_0*x5_2*x5_3 + x4_0*x6_0*x5_5 + 4*x4_0*x6_1*x5_4 + 6*x4_0*x6_2*x5_3 + 4*x4_0*x6_3*x5_2 + x4_0*x6_4*x5_1 + 4*x4_1*x5_0*x5_4 + 16*x4_1*x5_1*x5_3 + 4*x4_1*x6_0*x5_4 + 12*x4_1*x6_1*x5_3 + 12*x4_1*x6_2*x5_2 + 4*x4_1*x6_3*x5_1 + 6*x4_2*x5_0*x5_3 + 18*x4_2*x5_2*x5_1 + 6*x4_2*x6_0*x5_3 + 12*x4_2*x6_1*x5_2 + 6*x4_2*x6_2*x5_1 + 4*x4_3*x5_0*x5_2 + 4*x4_3*x6_0*x5_2 + 4*x4_3*x6_1*x5_1 + x4_4*x5_0*x5_1 + x4_4*x6_0*x5_1
  Equation 20: k5_0*x4_3 + k6_0*x4_4 + x4_0*x4_4 + 4*x4_1*x4_3 + 3*x4_2^2
  Equation 21: -6*k9_0*x6_1^3 + 3*x6_2^2*k10_0 - k7_0*x5_3*k10_0 + k8_0*x6_4*k10_0 - k9_0*x6_0^2*x5_3 - 3*k9_0*x6_0^2*x6_3 - 6*k9_0*x6_1^2*x5_1 + x6_0*x6_4*k10_0 + x6_1*x5_3*k10_0 + 4*x6_1*x6_3*k10_0 + 3*x6_2*x5_2*k10_0 + 3*x6_3*x5_1*k10_0 + x6_4*x5_0*k10_0 - 2*k9_0*k8_0*x6_0*x6_3 - 6*k9_0*k8_0*x6_1*x6_2 + k9_0*k8_0*x6_3*k10_0 + k9_0*x6_0*x5_3*k10_0 - 6*k9_0*x6_0*x6_1*x5_2 - 18*k9_0*x6_0*x6_1*x6_2 - 6*k9_0*x6_0*x6_2*x5_1 + 2*k9_0*x6_0*x6_3*k10_0 - 2*k9_0*x6_0*x6_3*x5_0 + 3*k9_0*x6_1*x5_2*k10_0 + 6*k9_0*x6_1*x6_2*k10_0 - 6*k9_0*x6_1*x6_2*x5_0 + 3*k9_0*x6_2*x5_1*k10_0 + k9_0*x6_3*x5_0*k10_0
  Equation 22: 0.166576351998544 - x5_5
  Equation 23: 10*k6_0*x5_3^2 + 10*x4_0*x5_3^2 + 30*x4_2*x5_2^2 + 5*x4_4*x5_1^2 - k5_0*x4_0*x5_5 - k5_0*x4_0*x6_5 - 5*k5_0*x4_1*x5_4 - 5*k5_0*x4_1*x6_4 - 10*k5_0*x4_2*x5_3 - 10*k5_0*x4_2*x6_3 - 10*k5_0*x4_3*x5_2 - 10*k5_0*x4_3*x6_2 - 5*k5_0*x4_4*x5_1 - 5*k5_0*x4_4*x6_1 - k5_0*x4_5*x5_0 - k5_0*x4_5*x6_0 + k6_0*x5_0*x5_6 + 6*k6_0*x5_1*x5_5 + 15*k6_0*x5_2*x5_4 + k6_0*x6_0*x5_6 + 5*k6_0*x6_1*x5_5 + 10*k6_0*x6_2*x5_4 + 10*k6_0*x6_3*x5_3 + 5*k6_0*x6_4*x5_2 + k6_0*x6_5*x5_1 + k7_0*k6_0*x5_5 + k7_0*x4_0*x5_5 + 5*k7_0*x4_1*x5_4 + 10*k7_0*x4_2*x5_3 + 10*k7_0*x4_3*x5_2 + 5*k7_0*x4_4*x5_1 + k7_0*x4_5*x5_0 - k8_0*k5_0*x4_5 + k8_0*k6_0*x5_6 + k8_0*x4_0*x5_6 + 5*k8_0*x4_1*x5_5 + 10*k8_0*x4_2*x5_4 + 10*k8_0*x4_3*x5_3 + 5*k8_0*x4_4*x5_2 + k8_0*x4_5*x5_1 + x4_0*x5_0*x5_6 + 6*x4_0*x5_1*x5_5 + 15*x4_0*x5_2*x5_4 + x4_0*x6_0*x5_6 + 5*x4_0*x6_1*x5_5 + 10*x4_0*x6_2*x5_4 + 10*x4_0*x6_3*x5_3 + 5*x4_0*x6_4*x5_2 + x4_0*x6_5*x5_1 + 5*x4_1*x5_0*x5_5 + 25*x4_1*x5_1*x5_4 + 50*x4_1*x5_2*x5_3 + 5*x4_1*x6_0*x5_5 + 20*x4_1*x6_1*x5_4 + 30*x4_1*x6_2*x5_3 + 20*x4_1*x6_3*x5_2 + 5*x4_1*x6_4*x5_1 + 10*x4_2*x5_0*x5_4 + 40*x4_2*x5_1*x5_3 + 10*x4_2*x6_0*x5_4 + 30*x4_2*x6_1*x5_3 + 30*x4_2*x6_2*x5_2 + 10*x4_2*x6_3*x5_1 + 10*x4_3*x5_0*x5_3 + 30*x4_3*x5_2*x5_1 + 10*x4_3*x6_0*x5_3 + 20*x4_3*x6_1*x5_2 + 10*x4_3*x6_2*x5_1 + 5*x4_4*x5_0*x5_2 + 5*x4_4*x6_0*x5_2 + 5*x4_4*x6_1*x5_1 + x4_5*x5_0*x5_1 + x4_5*x6_0*x5_1
  Equation 24: -k7_0*x5_4*k10_0 + k8_0*x6_5*k10_0 - 6*k9_0*k8_0*x6_2^2 - 18*k9_0*x6_0*x6_2^2 - k9_0*x6_0^2*x5_4 - 3*k9_0*x6_0^2*x6_4 - 12*k9_0*x6_1^2*x5_2 - 36*k9_0*x6_1^2*x6_2 + 6*k9_0*x6_2^2*k10_0 - 6*k9_0*x6_2^2*x5_0 + x6_0*x6_5*k10_0 + x6_1*x5_4*k10_0 + 5*x6_1*x6_4*k10_0 + 4*x6_2*x5_3*k10_0 + 10*x6_2*x6_3*k10_0 + 6*x6_3*x5_2*k10_0 + 4*x6_4*x5_1*k10_0 + x6_5*x5_0*k10_0 - 2*k9_0*k8_0*x6_0*x6_4 - 8*k9_0*k8_0*x6_1*x6_3 + k9_0*k8_0*x6_4*k10_0 + k9_0*x6_0*x5_4*k10_0 - 8*k9_0*x6_0*x6_1*x5_3 - 24*k9_0*x6_0*x6_1*x6_3 - 12*k9_0*x6_0*x6_2*x5_2 - 8*k9_0*x6_0*x6_3*x5_1 + 2*k9_0*x6_0*x6_4*k10_0 - 2*k9_0*x6_0*x6_4*x5_0 + 4*k9_0*x6_1*x5_3*k10_0 - 24*k9_0*x6_1*x6_2*x5_1 + 8*k9_0*x6_1*x6_3*k10_0 - 8*k9_0*x6_1*x6_3*x5_0 + 6*k9_0*x6_2*x5_2*k10_0 + 4*k9_0*x6_3*x5_1*k10_0 + k9_0*x6_4*x5_0*k10_0
  Equation 25: k5_0*x4_4 + k6_0*x4_5 + x4_0*x4_5 + 5*x4_1*x4_4 + 10*x4_2*x4_3
================================================================================

 60.229385 seconds (40.56 M allocations: 1.874 GiB, 2.16% gc time, 457.56% compilation time: <1% of which was recompilation)
[DEBUG-PE:fixed_degree.jl:121] Found 2 raw solutions
[DEBUG-PE] Solution 1: Dict{Any, Any}(x6(t) => 0.8728522314128304, k9 => -0.4389999582621035, k7 => 0.582000029875792, x5(t) => 0.8057154476644736, x7(t) => 5590814192, k10 => -0.6169999712227229, k6 => 0.6720000000224433, k5 => 0.5390000000129413, k8 => 1.1530000751385254, x4(t) => 0.2658250302928926)
[DEBUG-PE] Solution 2: Dict{Any, Any}(x6(t) => 1.4898522026355534, k9 => 0.4389999582621035, k7 => 0.582000029875792, x5(t) => 0.8057154476644736, x7(t) => 5590814192, k10 => 0.6169999712227229, k6 => 0.6720000000224433, k5 => 0.5390000000129413, k8 => 0.5360001039158026, x4(t) => 0.2658250302928926)
[DEBUG-PE:fixed_degree.jl:135] Backsolving initial conditions for 2 solutions
┌ Warning: `ODEProblem(sys, u0, tspan, p; kw...)` is deprecated. Use
│ `ODEProblem(sys, merge(if isempty(u0)
│     Dict()
│ else
│     Dict(unknowns(sys) .=> u0)
│ end, p), tspan)` instead.
└ @ ModelingToolkit ~/.julia/packages/ModelingToolkit/hlGut/src/deprecations.jl:45
┌ Warning: `ODEProblem(sys, u0, tspan, p; kw...)` is deprecated. Use
│ `ODEProblem(sys, merge(if isempty(u0)
│     Dict()
│ else
│     Dict(unknowns(sys) .=> u0)
│ end, p), tspan)` instead.
└ @ ModelingToolkit ~/.julia/packages/ModelingToolkit/hlGut/src/deprecations.jl:45
[DEBUG-PE:fixed_degree.jl:140] Returning 2 final solutions
┌ Warning: `ODEProblem(sys, u0, tspan, p; kw...)` is deprecated. Use
│ `ODEProblem(sys, merge(if isempty(u0)
│     Dict()
│ else
│     Dict(unknowns(sys) .=> u0)
│ end, p), tspan)` instead.
└ @ ModelingToolkit ~/.julia/packages/ModelingToolkit/hlGut/src/deprecations.jl:45
┌ Warning: `ODEProblem(sys, u0, tspan, p; kw...)` is deprecated. Use
│ `ODEProblem(sys, merge(if isempty(u0)
│     Dict()
│ else
│     Dict(unknowns(sys) .=> u0)
│ end, p), tspan)` instead.
└ @ ModelingToolkit ~/.julia/packages/ModelingToolkit/hlGut/src/deprecations.jl:45
Final Results:
Parameter(s)        :	 k5 = 0.539,  k6 = 0.672,  k7 = 0.582,  k8 = 1.153,  k9 = -0.439, k10 = -0.617
Initial Condition(s):	x4(t) = 0.450, x5(t) = 0.813, x6(t) = 0.254, x7(t) = 5590814192.427, where t = -1.000
Error: 9.4158e-13

Parameter(s)        :	 k5 = 0.539,  k6 = 0.672,  k7 = 0.582,  k8 = 0.536,  k9 = 0.439, k10 = 0.617
Initial Condition(s):	x4(t) = 0.450, x5(t) = 0.813, x6(t) = 0.871, x7(t) = 5590814192.427, where t = -1.000
Error: 9.4160e-13

153.654418 seconds (128.48 M allocations: 6.523 GiB, 3.45% gc time, 253.16% compilation time: 8% of which was recompilation)

ParameterEstimation.jl complete!
Results saved to: /home/orebas/.julia/dev/ODEParameterEstimation/src/examples/biohydrogenation/result_pe.csv
Number of solutions found: 2

Best solution from PE:
  States: OrderedDict{Any, Any}(x4(t) => 0.45000000000043916, x5(t) => 0.8129999999943428, x6(t) => 0.25400003906383156, x7(t) => 5.590814192427393e9)
  Parameters: OrderedDict{Any, Any}(k5 => 0.5390000000129413, k6 => 0.6720000000224433, k7 => 0.582000029875792, k8 => 1.1530000751385254, k9 => -0.4389999582621035, k10 => -0.6169999712227229)
Starting model: biohydrogenation
Using NEW optimized parameter estimation flow
[DEBUG-ODEPE] Derivative order: PE formula=11, heuristic=7, using n=11
[DEBUG-ODEPE] Starting identifiability analysis with:
 deriv_level: Dict(2 => 11, 1 => 11)

[DEBUG-ODEPE] Before Jacobian computation:
  varlist: Num[k5, k6, k7, k8, k9, k10, x4(t), x5(t), x6(t), x7(t)]
  parameter_values keys: SymbolicUtils.BasicSymbolic{Real}[k5, k6, k7, k8, k9, k10]
  ordered_test_points[1] keys: SymbolicUtils.BasicSymbolic{Real}[k5, k6, k7, k8, k9, k10, x4(t), x5(t), x6(t), x7(t)]

[DEBUG-ODEPE] Nullspace analysis:
  Nullspace size: (10, 1)
  Variable x7(t) has nullspace norm 1.0 > 1.0e-12, marking as unidentifiable
  Unidentifiable candidates: Any[x7(t)]

[DEBUG-ODEPE] Before Jacobian computation:
  varlist: Num[k5, k6, k7, k8, k9, k10, x4(t), x5(t), x6(t)]
  parameter_values keys: SymbolicUtils.BasicSymbolic{Real}[k5, k6, k7, k8, k9, k10]
  ordered_test_points[1] keys: SymbolicUtils.BasicSymbolic{Real}[k5, k6, k7, k8, k9, k10, x4(t), x5(t), x6(t)]
[DEBUG-ODEPE] Initial max_rank with n=11: 9
[DEBUG-ODEPE] Jacobian size: (24, 9)
[DEBUG-ODEPE] PE would use n=11 derivatives
[DEBUG-ODEPE] Testing n=10: rank=9 (vs max_rank=9)
[DEBUG-ODEPE] Testing n=9: rank=9 (vs max_rank=9)
[DEBUG-ODEPE] Testing n=8: rank=9 (vs max_rank=9)
[DEBUG-ODEPE] Testing n=7: rank=9 (vs max_rank=9)
[DEBUG-ODEPE] Testing n=6: rank=9 (vs max_rank=9)
[DEBUG-ODEPE] Testing n=5: rank=9 (vs max_rank=9)
[DEBUG-ODEPE] Testing n=4: rank=8 (vs max_rank=9)
[DEBUG-ODEPE] Rank dropped! Reverting to n=5
[DEBUG-ODEPE] Final derivative order after rank reduction: n=5
[DEBUG-ODEPE] Starting per-measurement refinement...
[DEBUG-ODEPE] Round 1: Reduced deriv_level[1] from 5 to 4, rank preserved at 9
[DEBUG-ODEPE] Round 2: Reduced deriv_level[1] from 4 to 3, rank preserved at 9
[DEBUG-ODEPE] Round 3: Reduced deriv_level[1] from 3 to 2, rank preserved at 9
[DEBUG-ODEPE] Final deriv_level after refinement: Dict(2 => 5, 1 => 2)

[DEBUG-ODEPE] DD structure analysis:
[DEBUG-ODEPE]   DD.obs_lhs dimensions: (12,)
[DEBUG-ODEPE]   DD.states_lhs dimensions: (11,)
[DEBUG-ODEPE]   Sample DD.obs_lhs[1][1:min(3,end)]: SymbolicUtils.BasicSymbolic{Real}[y1(t), y2(t)]
[DEBUG-ODEPE]   Sample DD.states_lhs[1][1:min(3,end)]: Any[x4ˍt(t), x5ˍt(t), x6ˍt(t)]
Phase 3: Solving at 1 shooting points...
[ Info: Getting equation system from StructuralIdentifiability.jl
[ Info: Converting ODESystem to SI.jl format
[ Info: Getting polynomial system from SIAN
[ Info: Built polynomial system with 29 equations
[ Info: Reduced polynomial system to 25 equations
[ Info: Checking identifiability
[ Info: Assessing local identifiability
[ Info: Assessing global identifiability
[ Info: Note: the input model has nontrivial submodels. If the computation for the full model will be too heavy, you may want to try to first analyze one of the submodels. They can be produced using function `find_submodels`
[ Info: Functions to check involve states
[ Info: Computing IO-equations
[ Info: Computed IO-equations in 28.231667987 seconds
[ Info: Computing Wronskians
[ Info: Computed Wronskians in 3.321934423 seconds
[ Info: Dimensions of the Wronskians [36, 3]
[ Info: Ranks of the Wronskians computed in 0.031881959 seconds
[ Info: Simplifying generating set. Simplification level: standard
⌜ # Computing specializations..     Time: 0:00:07[K✓ # Computing specializations..     Time: 0:00:08[K
[ Info: Search for polynomial generators concluded in 3.093282191
[ Info: Selecting generators in 0.015935628
[ Info: Inclusion checked with probability 0.9955 in 1.764393305 seconds
[ Info: Global identifiability assessed in 73.803299718 seconds
[ Info: SI.jl found 25 template equations
[ Info: Derivative variables: Any[y1_9, y1_3, y2_3, y1_8, y1_5, y1_6, y2_7, y2_11, y2_9, y1_7, y2_8, y1_10, y2_1, y2_4, y1_2, y2_10, y2_6, y1_0, y2_5, y2_2, y1_4, y1_11, y2_0, y1_1]
[ Info: Derivative orders in y_derivative_dict: Dict{Any, Any}(y1_9 => 9, y1_3 => 3, y2_3 => 3, y1_8 => 8, y1_5 => 5, y1_6 => 6, y2_7 => 7, y2_11 => 11, y2_9 => 9, y1_7 => 7, y2_8 => 8, y1_10 => 10, y2_1 => 1, y2_4 => 4, y1_2 => 2, y2_10 => 10, y2_6 => 6, y1_0 => 0, y2_5 => 5, y2_2 => 2, y1_4 => 4, y1_11 => 11, y2_0 => 0, y1_1 => 1)
[ Info: Maximum derivative order needed: 11
[ Info: Non-identifiable parameters: Set(Any[x7])
┌ Warning: Cannot map y2_12 to DD (order=12), using symbolic: y2_12
└ @ ODEParameterEstimation ~/.julia/dev/ODEParameterEstimation/src/core/si_equation_builder.jl:288
┌ Warning: Cannot map y1_12 to DD (order=12), using symbolic: y1_12
└ @ ODEParameterEstimation ~/.julia/dev/ODEParameterEstimation/src/core/si_equation_builder.jl:288
[ Info: Converting 25 polynomials from Nemo to Symbolics
[DEBUG-SI] Created SI.jl template with 25 equations

[DEBUG-SI] ========== SI.jl POLYNOMIAL SYSTEM ==========
[DEBUG-SI] Variables in derivative_dict: 24
[DEBUG-SI] Equations (25): 
[DEBUG-SI]   Eq 1: -x5_0 + y2(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 2: -k5_0*k8_0*x4_0 - k5_0*x4_0*x5_0 - k5_0*x4_0*x6_0 + k6_0*k7_0*x5_0 + k6_0*k8_0*x5_1 + k6_0*x5_0*x5_1 + k6_0*x5_1*x6_0 + k7_0*x4_0*x5_0 + k8_0*x4_0*x5_1 + x4_0*x5_0*x5_1 + x4_0*x5_1*x6_0
[DEBUG-SI]     Complexity: ~11 terms
[DEBUG-SI]   Eq 3: -x4_0 + y1(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 4: k5_0*x4_0 + k6_0*x4_1 + x4_0*x4_1
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 5: -x5_1 + y2ˍt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 6: -k5_0*k8_0*x4_1 - k5_0*x4_0*x5_1 - k5_0*x4_0*x6_1 - k5_0*x4_1*x5_0 - k5_0*x4_1*x6_0 + k6_0*k7_0*x5_1 + k6_0*k8_0*x5_2 + k6_0*x5_0*x5_2 + k6_0*(x5_1^2) + k6_0*x5_1*x6_1 + k6_0*x5_2*x6_0 + k7_0*x4_0*x5_1 + k7_0*x4_1*x5_0 + k8_0*x4_0*x5_2 + k8_0*x4_1*x5_1 + x4_0*x5_0*x5_2 + x4_0*(x5_1^2) + x4_0*x5_1*x6_1 + x4_0*x5_2*x6_0 + x4_1*x5_0*x5_1 + x4_1*x5_1*x6_0
[DEBUG-SI]     Complexity: ~21 terms
[DEBUG-SI]   Eq 7: -k10_0*k7_0*x5_0 + k10_0*k8_0*x6_1 + k10_0*x5_0*x6_1 + k10_0*x6_0*x6_1 + k10_0*k8_0*k9_0*x6_0 + k10_0*k9_0*x5_0*x6_0 + k10_0*k9_0*(x6_0^2) - k8_0*k9_0*(x6_0^2) - k9_0*x5_0*(x6_0^2) - k9_0*(x6_0^3)
[DEBUG-SI]     Complexity: ~10 terms
[DEBUG-SI]   Eq 8: -x4_1 + y1ˍt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 9: k5_0*x4_1 + k6_0*x4_2 + x4_0*x4_2 + x4_1^2
[DEBUG-SI]     Complexity: ~3 terms
[DEBUG-SI]   Eq 10: -x5_2 + y2ˍtt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 11: -k5_0*k8_0*x4_2 - k5_0*x4_0*x5_2 - k5_0*x4_0*x6_2 - (2//1)*k5_0*x4_1*x5_1 - (2//1)*k5_0*x4_1*x6_1 - k5_0*x4_2*x5_0 - k5_0*x4_2*x6_0 + k6_0*k7_0*x5_2 + k6_0*k8_0*x5_3 + k6_0*x5_0*x5_3 + (3//1)*k6_0*x5_1*x5_2 + k6_0*x5_1*x6_2 + (2//1)*k6_0*x5_2*x6_1 + k6_0*x5_3*x6_0 + k7_0*x4_0*x5_2 + (2//1)*k7_0*x4_1*x5_1 + k7_0*x4_2*x5_0 + k8_0*x4_0*x5_3 + (2//1)*k8_0*x4_1*x5_2 + k8_0*x4_2*x5_1 + x4_0*x5_0*x5_3 + (3//1)*x4_0*x5_1*x5_2 + x4_0*x5_1*x6_2 + (2//1)*x4_0*x5_2*x6_1 + x4_0*x5_3*x6_0 + (2//1)*x4_1*x5_0*x5_2 + (2//1)*x4_1*(x5_1^2) + (2//1)*x4_1*x5_1*x6_1 + (2//1)*x4_1*x5_2*x6_0 + x4_2*x5_0*x5_1 + x4_2*x5_1*x6_0
[DEBUG-SI]     Complexity: ~31 terms
[DEBUG-SI]   Eq 12: -k10_0*k7_0*x5_1 + k10_0*k8_0*x6_2 + k10_0*x5_0*x6_2 + k10_0*x5_1*x6_1 + k10_0*x6_0*x6_2 + k10_0*(x6_1^2) + k10_0*k8_0*k9_0*x6_1 + k10_0*k9_0*x5_0*x6_1 + k10_0*k9_0*x5_1*x6_0 + (2//1)*k10_0*k9_0*x6_0*x6_1 - (2//1)*k8_0*k9_0*x6_0*x6_1 - (2//1)*k9_0*x5_0*x6_0*x6_1 - k9_0*x5_1*(x6_0^2) - (3//1)*k9_0*(x6_0^2)*x6_1
[DEBUG-SI]     Complexity: ~14 terms
[DEBUG-SI]   Eq 13: -x4_2 + y1ˍtt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 14: k5_0*x4_2 + k6_0*x4_3 + x4_0*x4_3 + (3//1)*x4_1*x4_2
[DEBUG-SI]     Complexity: ~3 terms
[DEBUG-SI]   Eq 15: -x5_3 + y2ˍttt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 16: -k5_0*k8_0*x4_3 - k5_0*x4_0*x5_3 - k5_0*x4_0*x6_3 - (3//1)*k5_0*x4_1*x5_2 - (3//1)*k5_0*x4_1*x6_2 - (3//1)*k5_0*x4_2*x5_1 - (3//1)*k5_0*x4_2*x6_1 - k5_0*x4_3*x5_0 - k5_0*x4_3*x6_0 + k6_0*k7_0*x5_3 + k6_0*k8_0*x5_4 + k6_0*x5_0*x5_4 + (4//1)*k6_0*x5_1*x5_3 + k6_0*x5_1*x6_3 + (3//1)*k6_0*(x5_2^2) + (3//1)*k6_0*x5_2*x6_2 + (3//1)*k6_0*x5_3*x6_1 + k6_0*x5_4*x6_0 + k7_0*x4_0*x5_3 + (3//1)*k7_0*x4_1*x5_2 + (3//1)*k7_0*x4_2*x5_1 + k7_0*x4_3*x5_0 + k8_0*x4_0*x5_4 + (3//1)*k8_0*x4_1*x5_3 + (3//1)*k8_0*x4_2*x5_2 + k8_0*x4_3*x5_1 + x4_0*x5_0*x5_4 + (4//1)*x4_0*x5_1*x5_3 + x4_0*x5_1*x6_3 + (3//1)*x4_0*(x5_2^2) + (3//1)*x4_0*x5_2*x6_2 + (3//1)*x4_0*x5_3*x6_1 + x4_0*x5_4*x6_0 + (3//1)*x4_1*x5_0*x5_3 + (9//1)*x4_1*x5_1*x5_2 + (3//1)*x4_1*x5_1*x6_2 + (6//1)*x4_1*x5_2*x6_1 + (3//1)*x4_1*x5_3*x6_0 + (3//1)*x4_2*x5_0*x5_2 + (3//1)*x4_2*(x5_1^2) + (3//1)*x4_2*x5_1*x6_1 + (3//1)*x4_2*x5_2*x6_0 + x4_3*x5_0*x5_1 + x4_3*x5_1*x6_0
[DEBUG-SI]     Complexity: ~44 terms
[DEBUG-SI]   Eq 17: -k10_0*k7_0*x5_2 + k10_0*k8_0*x6_3 + k10_0*x5_0*x6_3 + (2//1)*k10_0*x5_1*x6_2 + k10_0*x5_2*x6_1 + k10_0*x6_0*x6_3 + (3//1)*k10_0*x6_1*x6_2 + k10_0*k8_0*k9_0*x6_2 + k10_0*k9_0*x5_0*x6_2 + (2//1)*k10_0*k9_0*x5_1*x6_1 + k10_0*k9_0*x5_2*x6_0 + (2//1)*k10_0*k9_0*x6_0*x6_2 + (2//1)*k10_0*k9_0*(x6_1^2) - (2//1)*k8_0*k9_0*x6_0*x6_2 - (2//1)*k8_0*k9_0*(x6_1^2) - (2//1)*k9_0*x5_0*x6_0*x6_2 - (2//1)*k9_0*x5_0*(x6_1^2) - (4//1)*k9_0*x5_1*x6_0*x6_1 - k9_0*x5_2*(x6_0^2) - (3//1)*k9_0*(x6_0^2)*x6_2 - (6//1)*k9_0*x6_0*(x6_1^2)
[DEBUG-SI]     Complexity: ~21 terms
[DEBUG-SI]   Eq 18: -x5_4 + y2ˍtttt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 19: -k5_0*k8_0*x4_4 - k5_0*x4_0*x5_4 - k5_0*x4_0*x6_4 - (4//1)*k5_0*x4_1*x5_3 - (4//1)*k5_0*x4_1*x6_3 - (6//1)*k5_0*x4_2*x5_2 - (6//1)*k5_0*x4_2*x6_2 - (4//1)*k5_0*x4_3*x5_1 - (4//1)*k5_0*x4_3*x6_1 - k5_0*x4_4*x5_0 - k5_0*x4_4*x6_0 + k6_0*k7_0*x5_4 + k6_0*k8_0*x5_5 + k6_0*x5_0*x5_5 + (5//1)*k6_0*x5_1*x5_4 + k6_0*x5_1*x6_4 + (10//1)*k6_0*x5_2*x5_3 + (4//1)*k6_0*x5_2*x6_3 + (6//1)*k6_0*x5_3*x6_2 + (4//1)*k6_0*x5_4*x6_1 + k6_0*x5_5*x6_0 + k7_0*x4_0*x5_4 + (4//1)*k7_0*x4_1*x5_3 + (6//1)*k7_0*x4_2*x5_2 + (4//1)*k7_0*x4_3*x5_1 + k7_0*x4_4*x5_0 + k8_0*x4_0*x5_5 + (4//1)*k8_0*x4_1*x5_4 + (6//1)*k8_0*x4_2*x5_3 + (4//1)*k8_0*x4_3*x5_2 + k8_0*x4_4*x5_1 + x4_0*x5_0*x5_5 + (5//1)*x4_0*x5_1*x5_4 + x4_0*x5_1*x6_4 + (10//1)*x4_0*x5_2*x5_3 + (4//1)*x4_0*x5_2*x6_3 + (6//1)*x4_0*x5_3*x6_2 + (4//1)*x4_0*x5_4*x6_1 + x4_0*x5_5*x6_0 + (4//1)*x4_1*x5_0*x5_4 + (16//1)*x4_1*x5_1*x5_3 + (4//1)*x4_1*x5_1*x6_3 + (12//1)*x4_1*(x5_2^2) + (12//1)*x4_1*x5_2*x6_2 + (12//1)*x4_1*x5_3*x6_1 + (4//1)*x4_1*x5_4*x6_0 + (6//1)*x4_2*x5_0*x5_3 + (18//1)*x4_2*x5_1*x5_2 + (6//1)*x4_2*x5_1*x6_2 + (12//1)*x4_2*x5_2*x6_1 + (6//1)*x4_2*x5_3*x6_0 + (4//1)*x4_3*x5_0*x5_2 + (4//1)*x4_3*(x5_1^2) + (4//1)*x4_3*x5_1*x6_1 + (4//1)*x4_3*x5_2*x6_0 + x4_4*x5_0*x5_1 + x4_4*x5_1*x6_0
[DEBUG-SI]     Complexity: ~57 terms
[DEBUG-SI]   Eq 20: k5_0*x4_3 + k6_0*x4_4 + x4_0*x4_4 + (4//1)*x4_1*x4_3 + (3//1)*(x4_2^2)
[DEBUG-SI]     Complexity: ~4 terms
[DEBUG-SI]   Eq 21: -k10_0*k7_0*x5_3 + k10_0*k8_0*x6_4 + k10_0*x5_0*x6_4 + (3//1)*k10_0*x5_1*x6_3 + (3//1)*k10_0*x5_2*x6_2 + k10_0*x5_3*x6_1 + k10_0*x6_0*x6_4 + (4//1)*k10_0*x6_1*x6_3 + (3//1)*k10_0*(x6_2^2) + k10_0*k8_0*k9_0*x6_3 + k10_0*k9_0*x5_0*x6_3 + (3//1)*k10_0*k9_0*x5_1*x6_2 + (3//1)*k10_0*k9_0*x5_2*x6_1 + k10_0*k9_0*x5_3*x6_0 + (2//1)*k10_0*k9_0*x6_0*x6_3 + (6//1)*k10_0*k9_0*x6_1*x6_2 - (2//1)*k8_0*k9_0*x6_0*x6_3 - (6//1)*k8_0*k9_0*x6_1*x6_2 - (2//1)*k9_0*x5_0*x6_0*x6_3 - (6//1)*k9_0*x5_0*x6_1*x6_2 - (6//1)*k9_0*x5_1*x6_0*x6_2 - (6//1)*k9_0*x5_1*(x6_1^2) - (6//1)*k9_0*x5_2*x6_0*x6_1 - k9_0*x5_3*(x6_0^2) - (3//1)*k9_0*(x6_0^2)*x6_3 - (18//1)*k9_0*x6_0*x6_1*x6_2 - (6//1)*k9_0*(x6_1^3)
[DEBUG-SI]     Complexity: ~27 terms
[DEBUG-SI]   Eq 22: -x5_5 + y2ˍttttt(t)
[DEBUG-SI]     Complexity: ~2 terms
[DEBUG-SI]   Eq 23: -k5_0*k8_0*x4_5 - k5_0*x4_0*x5_5 - k5_0*x4_0*x6_5 - (5//1)*k5_0*x4_1*x5_4 - (5//1)*k5_0*x4_1*x6_4 - (10//1)*k5_0*x4_2*x5_3 - (10//1)*k5_0*x4_2*x6_3 - (10//1)*k5_0*x4_3*x5_2 - (10//1)*k5_0*x4_3*x6_2 - (5//1)*k5_0*x4_4*x5_1 - (5//1)*k5_0*x4_4*x6_1 - k5_0*x4_5*x5_0 - k5_0*x4_5*x6_0 + k6_0*k7_0*x5_5 + k6_0*k8_0*x5_6 + k6_0*x5_0*x5_6 + (6//1)*k6_0*x5_1*x5_5 + k6_0*x5_1*x6_5 + (15//1)*k6_0*x5_2*x5_4 + (5//1)*k6_0*x5_2*x6_4 + (10//1)*k6_0*(x5_3^2) + (10//1)*k6_0*x5_3*x6_3 + (10//1)*k6_0*x5_4*x6_2 + (5//1)*k6_0*x5_5*x6_1 + k6_0*x5_6*x6_0 + k7_0*x4_0*x5_5 + (5//1)*k7_0*x4_1*x5_4 + (10//1)*k7_0*x4_2*x5_3 + (10//1)*k7_0*x4_3*x5_2 + (5//1)*k7_0*x4_4*x5_1 + k7_0*x4_5*x5_0 + k8_0*x4_0*x5_6 + (5//1)*k8_0*x4_1*x5_5 + (10//1)*k8_0*x4_2*x5_4 + (10//1)*k8_0*x4_3*x5_3 + (5//1)*k8_0*x4_4*x5_2 + k8_0*x4_5*x5_1 + x4_0*x5_0*x5_6 + (6//1)*x4_0*x5_1*x5_5 + x4_0*x5_1*x6_5 + (15//1)*x4_0*x5_2*x5_4 + (5//1)*x4_0*x5_2*x6_4 + (10//1)*x4_0*(x5_3^2) + (10//1)*x4_0*x5_3*x6_3 + (10//1)*x4_0*x5_4*x6_2 + (5//1)*x4_0*x5_5*x6_1 + x4_0*x5_6*x6_0 + (5//1)*x4_1*x5_0*x5_5 + (25//1)*x4_1*x5_1*x5_4 + (5//1)*x4_1*x5_1*x6_4 + (50//1)*x4_1*x5_2*x5_3 + (20//1)*x4_1*x5_2*x6_3 + (30//1)*x4_1*x5_3*x6_2 + (20//1)*x4_1*x5_4*x6_1 + (5//1)*x4_1*x5_5*x6_0 + (10//1)*x4_2*x5_0*x5_4 + (40//1)*x4_2*x5_1*x5_3 + (10//1)*x4_2*x5_1*x6_3 + (30//1)*x4_2*(x5_2^2) + (30//1)*x4_2*x5_2*x6_2 + (30//1)*x4_2*x5_3*x6_1 + (10//1)*x4_2*x5_4*x6_0 + (10//1)*x4_3*x5_0*x5_3 + (30//1)*x4_3*x5_1*x5_2 + (10//1)*x4_3*x5_1*x6_2 + (20//1)*x4_3*x5_2*x6_1 + (10//1)*x4_3*x5_3*x6_0 + (5//1)*x4_4*x5_0*x5_2 + (5//1)*x4_4*(x5_1^2) + (5//1)*x4_4*x5_1*x6_1 + (5//1)*x4_4*x5_2*x6_0 + x4_5*x5_0*x5_1 + x4_5*x5_1*x6_0
[DEBUG-SI]     Complexity: ~73 terms
[DEBUG-SI]   Eq 24: -k10_0*k7_0*x5_4 + k10_0*k8_0*x6_5 + k10_0*x5_0*x6_5 + (4//1)*k10_0*x5_1*x6_4 + (6//1)*k10_0*x5_2*x6_3 + (4//1)*k10_0*x5_3*x6_2 + k10_0*x5_4*x6_1 + k10_0*x6_0*x6_5 + (5//1)*k10_0*x6_1*x6_4 + (10//1)*k10_0*x6_2*x6_3 + k10_0*k8_0*k9_0*x6_4 + k10_0*k9_0*x5_0*x6_4 + (4//1)*k10_0*k9_0*x5_1*x6_3 + (6//1)*k10_0*k9_0*x5_2*x6_2 + (4//1)*k10_0*k9_0*x5_3*x6_1 + k10_0*k9_0*x5_4*x6_0 + (2//1)*k10_0*k9_0*x6_0*x6_4 + (8//1)*k10_0*k9_0*x6_1*x6_3 + (6//1)*k10_0*k9_0*(x6_2^2) - (2//1)*k8_0*k9_0*x6_0*x6_4 - (8//1)*k8_0*k9_0*x6_1*x6_3 - (6//1)*k8_0*k9_0*(x6_2^2) - (2//1)*k9_0*x5_0*x6_0*x6_4 - (8//1)*k9_0*x5_0*x6_1*x6_3 - (6//1)*k9_0*x5_0*(x6_2^2) - (8//1)*k9_0*x5_1*x6_0*x6_3 - (24//1)*k9_0*x5_1*x6_1*x6_2 - (12//1)*k9_0*x5_2*x6_0*x6_2 - (12//1)*k9_0*x5_2*(x6_1^2) - (8//1)*k9_0*x5_3*x6_0*x6_1 - k9_0*x5_4*(x6_0^2) - (3//1)*k9_0*(x6_0^2)*x6_4 - (24//1)*k9_0*x6_0*x6_1*x6_3 - (18//1)*k9_0*x6_0*(x6_2^2) - (36//1)*k9_0*(x6_1^2)*x6_2
[DEBUG-SI]     Complexity: ~35 terms
[DEBUG-SI]   Eq 25: k5_0*x4_4 + k6_0*x4_5 + x4_0*x4_5 + (5//1)*x4_1*x4_4 + (10//1)*x4_2*x4_3
[DEBUG-SI]     Complexity: ~4 terms
[DEBUG-SI] =========================================

[ Info: Saved SI.jl template to saved_systems/si_template_2025-09-06'T'22:24:57.257.jl
[DEBUG-SI] Max derivative order required by template: 11
[DEBUG-SI] Created interpolated_values_dict with 24 entries
[DEBUG-SI] Substitution key sample (up to 5): Any[y2ˍt(t), y2ˍtt(t), y1ˍtttttttt(t), y2ˍtttt(t), y2ˍttttttttt(t)]
[DEBUG-SI] Before substitution (Eq1): -x5_0 + y2(t)
[DEBUG-SI] After substitution (Eq1): 0.8057411089931924 - x5_0
[DEBUG-SI] Extracted 25 variables from substituted system: Any[x5_0, x4_0, k7_0, k6_0, k5_0, k8_0, x5_1, x6_0, x4_1, x5_2, x6_1, k10_0, k9_0, x4_2, x5_3, x6_2, x4_3, x5_4, x6_3, x4_4, x5_5, x6_4, x5_6, x4_5, x6_5]
Found 2 solutions total
ERROR: LoadError: ArgumentError: invalid index: nothing of type Nothing
Stacktrace:
  [1] to_index(i::Nothing)
    @ Base ./indices.jl:315
  [2] to_index(A::Vector{Float64}, i::Nothing)
    @ Base ./indices.jl:292
  [3] to_indices
    @ ./indices.jl:368 [inlined]
  [4] to_indices
    @ ./indices.jl:360 [inlined]
  [5] getindex
    @ ./abstractarray.jl:1312 [inlined]
  [6] lookup_value(var::SymbolicUtils.BasicSymbolic{Real}, var_search::Num, soln_index::Int64, good_udict::Dict{Any, Any}, trivial_dict::Dict{Any, Any}, final_varlist::Vector{Any}, trimmed_varlist::Vector{Any}, solns::Vector{Vector{Float64}})
    @ ODEParameterEstimation ~/.julia/dev/ODEParameterEstimation/src/core/parameter_estimation.jl:1122
  [7] process_estimation_results(PEP::ParameterEstimationProblem, solution_data::@NamedTuple{solns::Vector{Vector{Float64}}, hcvarlist::Vector{Any}, trivial_dict::Dict{Any, Any}, trimmed_varlist::Vector{Any}, forward_subst_dict::Vector{Any}, reverse_subst_dict::Vector{Any}, final_varlist::Vector{Any}, good_udict::Dict{Any, Any}}, setup_data::@NamedTuple{states::Vector{SymbolicUtils.BasicSymbolic{Real}}, params::Vector{Any}, t_vector::Vector{Float64}, interpolants::Dict{Any, AbstractInterpolator}, good_num_points::Int64, good_deriv_level::Dict{Int64, Int64}, good_udict::Dict{Any, Any}, good_varlist::Vector{Num}, good_DD::DerivativeData, time_index_set::Int64, all_unidentifiable::Set{Any}}; nooutput::Bool, polish_solutions::Bool, polish_maxiters::Int64, polish_method::Type)
    @ ODEParameterEstimation ~/.julia/dev/ODEParameterEstimation/src/core/parameter_estimation_helpers.jl:476
  [8] optimized_multishot_parameter_estimation(PEP::ParameterEstimationProblem; system_solver::typeof(solve_with_hc), max_num_points::Int64, interpolator::Function, nooutput::Bool, diagnostics::Bool, diagnostic_data::ParameterEstimationProblem, polish_solutions::Bool, polish_maxiters::Int64, polish_method::Type, shooting_points::Int64, debug_solver::Bool, debug_cas_diagnostics::Bool, debug_dimensional_analysis::Bool, use_adaptive_id::Nothing, use_si_template::Bool)
    @ ODEParameterEstimation ~/.julia/dev/ODEParameterEstimation/src/core/optimized_multishot_estimation.jl:1146
  [9] analyze_parameter_estimation_problem(PEP::ParameterEstimationProblem; interpolator::Function, max_num_points::Int64, nooutput::Bool, system_solver::Function, abstol::Float64, reltol::Float64, trap_debug::Bool, diagnostics::Bool, polish_method::Type, polish_maxiters::Int64, try_more_methods::Bool, shooting_points::Int64, use_new_flow::Bool, max_reconstruction_attempts::Int64, use_si_template::Bool)
    @ ODEParameterEstimation ~/.julia/dev/ODEParameterEstimation/src/core/analysis_utils.jl:370
 [10] top-level scope
    @ ~/.julia/dev/ODEParameterEstimation/src/examples/biohydrogenation/biohydrogenation_example.jl:108
in expression starting at /home/orebas/.julia/dev/ODEParameterEstimation/src/examples/biohydrogenation/biohydrogenation_example.jl:108
