Starting model: substr_test
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :17
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21
primes of bitsize 28
G-Q-Pt-FG-LT-LP(C)
Dimension of the quotient :1
Degree of the radical :1
Use last variable as separating element
Separating form: [0, 0, 0, 0, 0, 0, 0, 0, 1]
Run Groebner learn
Test cyclic optimization
Apply cyclic optimization 
Multi-modular computation (1 threads): G-Q-Pt-FG-LT-LP(C)
5-9-13-17-21-
check-G-Q-Pt-FG-LT-LP(C)
Nb Primes used :21

Unidentifiability Analysis from multipoint_parameter_estimation:
All unidentifiable variables: Set{Any}()
Unidentifiable variables substitution dictionary: Dict{Any, Any}()
Trivially solvable variables: Dict{Any, Any}()

=== Model: substr_test ===

Found 1 distinct solution clusters:

Cluster 1: 27 similar solutions
Best solution (Error: 0.0):
--------------------------------------------------
Variable     | True Value  | Estimated   | Rel. Error
-----------------------------------------------------
x1(t)        |   2.000000 |   2.000000 |   0.000000
x2(t)        |   3.000000 |   3.000000 |   0.000000
x3(t)        |   4.000000 |   4.000000 |   0.000000
a            |   0.100000 |   0.100000 |   0.000000
b            |   0.200000 |   0.200000 |   0.000000
beta         |   0.300000 |   0.300000 |   0.000000


Best approximation error for substr_test: 0.0

Best maximum relative error for substr_test (excluding ALL unidentifiable parameters): 0.0
Best minimum relative error: 0.0
Best mean relative error: 0.0
Best median relative error: 0.0
Best maximum relative error: 0.0
Best RMS relative error: 0.0
SUCCESS
